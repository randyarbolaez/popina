{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/Pagination.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QEURY{\\n    restaurantsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { perPage } from '../config';\nvar PAGINATION_QEURY = gql(_templateObject()); // if (error) return <p>Error</p>\n\nvar Pagination = function Pagination(props) {\n  return React.createElement(Query, {\n    query: PAGINATION_QEURY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Loading...\");\n    var count = data.restaurantsConnection.aggregate.count;\n    var pages = Math.ceil(count / perPage);\n    var page = props.page;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Popina | Page \", page, \" of \", pages)), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: 'restaurants',\n        query: {\n          page: page - 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      disabled: page == 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Prev\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Total Restaurants | \", count), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: 'restaurants',\n        query: {\n          page: page + 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      disabled: page >= pages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Next\")), \"Page 1 of \", pages);\n  });\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/Pagination.js"],"names":["React","gql","Query","Head","Link","perPage","PAGINATION_QEURY","Pagination","props","data","loading","error","count","restaurantsConnection","aggregate","pages","Math","ceil","page","pathname","query"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,gBAAgB,GAAGL,GAAH,mBAAtB,C,CAUA;;AAEA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SACtB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA8B;AAAA,QAA3BG,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZC,KAAY,QAAZA,KAAY;AAC7B,QAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAME,KAAK,GAAGH,IAAI,CAACI,qBAAL,CAA2BC,SAA3B,CAAqCF,KAAnD;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGP,OAAlB,CAAd;AACA,QAAMa,IAAI,GAAGV,KAAK,CAACU,IAAnB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACiBA,IADjB,UAC2BH,KAD3B,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AACE,MAAA,IAAI,EAAE;AACJI,QAAAA,QAAQ,EAAE,aADN;AAEJC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAG,MAAA,QAAQ,EAAEA,IAAI,IAAI,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CANF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwBN,KAAxB,CAbF,EAcE,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AACE,MAAA,IAAI,EAAE;AACJO,QAAAA,QAAQ,EAAE,aADN;AAEJC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFH,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAG,MAAA,QAAQ,EAAEA,IAAI,IAAIH,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAdF,gBAqBaA,KArBb,CADF;AAwBD,GA9BH,CADsB;AAAA,CAAxB;;AAmCA,eAAeR,UAAf","sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { perPage } from '../config';\n\nconst PAGINATION_QEURY = gql`\n  query PAGINATION_QEURY{\n    restaurantsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\n// if (error) return <p>Error</p>\n\nconst Pagination = props => (\n  <Query query={PAGINATION_QEURY}>\n    {({ data, loading, error }) => {\n      if (loading) return <p>Loading...</p>\n      const count = data.restaurantsConnection.aggregate.count\n      const pages = Math.ceil(count / perPage)\n      const page = props.page;\n      return (\n        <div>\n          <Head>\n            <title>\n              Popina | Page {page} of {pages}\n            </title>\n          </Head>\n          <Link prefetch\n            href={{\n              pathname: 'restaurants',\n              query: { page: page - 1 }\n            }}>\n            <a disabled={page == 1}>Prev</a>\n          </Link>\n          <p>Total Restaurants | {count}</p>\n          <Link prefetch\n            href={{\n              pathname: 'restaurants',\n              query: { page: page + 1 }\n            }}>\n            <a disabled={page >= pages}>Next</a>\n          </Link>\n          Page 1 of {pages}\n        </div>)\n    }}\n  </Query>\n)\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}