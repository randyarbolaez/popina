{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/Pagination.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QEURY{\\n    restaurantsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display:flex;\\n  justify-content:center;\\n  align-items:center;\\n  /* a:disabled {\\n    pointer-events: none;\\n    cursor: default;\\n    color:red;\\n  } */\\n\\n  button{\\n    background:#f4976c;\\n    border:none;\\n    font-size:2rem;\\n    font-family: Porton;\\n  }\\n\\n  button:disabled {\\n    color:purple;\\n    background:transparent;\\n  }\\n  a{\\n    color:red;\\n  }\\n  a:disabled{\\n    color:purple;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { perPage } from '../config';\nimport styled from 'styled-components';\nvar PaginationStyles = styled.div(_templateObject());\nvar PAGINATION_QEURY = gql(_templateObject2());\n\nvar Pagination = function Pagination(props) {\n  return React.createElement(Query, {\n    query: PAGINATION_QEURY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    if (error) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Error\");\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Loading...\");\n    var count = data.restaurantsConnection.aggregate.count;\n    var pages = Math.ceil(count / perPage);\n    var page = props.page;\n    return React.createElement(PaginationStyles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Popina | Page \", page, \" of \", pages)), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: 'restaurants',\n        query: {\n          page: page - 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: page <= 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Prev\"))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Page \", page, \" of \", pages), React.createElement(Link, {\n      prefetch: true,\n      href: {\n        pathname: 'restaurants',\n        query: {\n          page: page + 1\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: page >= pages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Next\"))));\n  });\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/Pagination.js"],"names":["React","gql","Query","Head","Link","perPage","styled","PaginationStyles","div","PAGINATION_QEURY","Pagination","props","data","loading","error","count","restaurantsConnection","aggregate","pages","Math","ceil","page","pathname","query"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAV,mBAAtB;AA6BA,IAAMC,gBAAgB,GAAGR,GAAH,oBAAtB;;AAUA,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SACtB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,gBAA8B;AAAA,QAA3BG,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZC,KAAY,QAAZA,KAAY;AAC7B,QAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACX,QAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAME,KAAK,GAAGH,IAAI,CAACI,qBAAL,CAA2BC,SAA3B,CAAqCF,KAAnD;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGV,OAAlB,CAAd;AACA,QAAMgB,IAAI,GAAGV,KAAK,CAACU,IAAnB;AACA,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsBA,IAAtB,UAAgCH,KAAhC,CADF,CADF,EAIE,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,IAAI,EAAE;AACnBI,QAAAA,QAAQ,EAAE,aADS;AAEnBC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFY,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAQ,MAAA,QAAQ,EAAEA,IAAI,IAAI,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,CAJF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUA,IAAV,UAAoBH,KAApB,CAZF,EAaE,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,IAAI,EAAE;AACnBI,QAAAA,QAAQ,EAAE,aADS;AAEnBC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAAf;AAFY,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAQ,MAAA,QAAQ,EAAEA,IAAI,IAAIH,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,CAbF,CADF;AAuBD,GA9BH,CADsB;AAAA,CAAxB;;AAmCA,eAAeR,UAAf","sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { perPage } from '../config';\nimport styled from 'styled-components';\n\nconst PaginationStyles = styled.div`\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  /* a:disabled {\n    pointer-events: none;\n    cursor: default;\n    color:red;\n  } */\n\n  button{\n    background:#f4976c;\n    border:none;\n    font-size:2rem;\n    font-family: Porton;\n  }\n\n  button:disabled {\n    color:purple;\n    background:transparent;\n  }\n  a{\n    color:red;\n  }\n  a:disabled{\n    color:purple;\n  }\n`;\n\nconst PAGINATION_QEURY = gql`\n  query PAGINATION_QEURY{\n    restaurantsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = props => (\n  <Query query={PAGINATION_QEURY}>\n    {({ data, loading, error }) => {\n      if (error) return <p>Error</p>\n      if (loading) return <p>Loading...</p>\n      const count = data.restaurantsConnection.aggregate.count\n      const pages = Math.ceil(count / perPage)\n      const page = props.page\n      return (\n        <PaginationStyles>\n          <Head>\n            <title>Popina | Page {page} of {pages}</title>\n          </Head>\n          <Link prefetch href={{\n            pathname: 'restaurants',\n            query: { page: page - 1 }\n          }}>\n            <button disabled={page <= 1}>\n              <a>Prev</a>\n            </button>\n          </Link>\n          <h2>Page {page} of {pages}</h2>\n          <Link prefetch href={{\n            pathname: 'restaurants',\n            query: { page: page + 1 }\n          }}>\n            <button disabled={page >= pages}>\n              <a>Next</a>\n            </button>\n          </Link>\n        </PaginationStyles>)\n    }}\n  </Query>\n)\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}