{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/Pagination.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QEURY{\\n    restaurantsConnection {\\n      aggregate {\\n        count\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nvar PAGINATION_QEURY = gql(_templateObject());\n\nvar Pagination = function Pagination(props) {\n  return React.createElement(Query, {\n    query: PAGINATION_QEURY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Hi Im the pagination blah\");\n  });\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/Pagination.js"],"names":["React","gql","Query","PAGINATION_QEURY","Pagination","props","data","loading","error"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,IAAMC,gBAAgB,GAAGF,GAAH,mBAAtB;;AAUA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SACtB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGG,IAAH,QAAGA,IAAH;AAAA,QAASC,OAAT,QAASA,OAAT;AAAA,QAAkBC,KAAlB,QAAkBA,KAAlB;AAAA,WAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA9B;AAAA,GADH,CADsB;AAAA,CAAxB;;AAMA,eAAeJ,UAAf","sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nconst PAGINATION_QEURY = gql`\n  query PAGINATION_QEURY{\n    restaurantsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = props => (\n  <Query query={PAGINATION_QEURY}>\n    {({ data, loading, error }) => <p>Hi Im the pagination blah</p>}\n  </Query>\n)\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}