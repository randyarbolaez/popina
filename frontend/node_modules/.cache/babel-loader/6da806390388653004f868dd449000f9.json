{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/Restaurants.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  margin:2%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align:center;\\n  margin:2%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_RESTAURANTS_QUERY {\\n    restaurants {\\n      id\\n      name\\n      description\\n      image\\n      location\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Restaurant from './Restaurant';\nvar ALL_RESTAURANTS_QUERY = gql(_templateObject());\nvar Center = styled.div(_templateObject2());\nvar RestaurantsList = styled.div(_templateObject3());\n\nvar Restaurants =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Restaurants, _Component);\n\n  function Restaurants() {\n    _classCallCheck(this, Restaurants);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Restaurants).apply(this, arguments));\n  }\n\n  _createClass(Restaurants, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Center, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Restaurants\"), React.createElement(Query, {\n        query: ALL_RESTAURANTS_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            error = _ref.error,\n            loading = _ref.loading;\n        console.log(data.restaurants);\n        if (loading) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Loading...\");\n        if (error) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Error: \", error.message);\n        return React.createElement(RestaurantsList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, data.restaurants.map(function (restaurant) {\n          return React.createElement(Restaurant, {\n            restaurant: restaurant,\n            key: restaurant.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          });\n        }));\n      }));\n    }\n  }]);\n\n  return Restaurants;\n}(Component);\n\nexport default Restaurants;","map":{"version":3,"sources":["/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/Restaurants.js"],"names":["React","Component","Query","gql","styled","Restaurant","ALL_RESTAURANTS_QUERY","Center","div","RestaurantsList","Restaurants","data","error","loading","console","log","restaurants","message","map","restaurant","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,IAAMC,qBAAqB,GAAGH,GAAH,mBAA3B;AAYA,IAAMI,MAAM,GAAGH,MAAM,CAACI,GAAV,oBAAZ;AAKA,IAAMC,eAAe,GAAGL,MAAM,CAACI,GAAV,oBAArB;;IAIME,W;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAA8B;AAAA,YAA3BK,IAA2B,QAA3BA,IAA2B;AAAA,YAArBC,KAAqB,QAArBA,KAAqB;AAAA,YAAdC,OAAc,QAAdA,OAAc;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,WAAjB;AACA,YAAIH,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACb,YAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAWA,KAAK,CAACK,OAAjB,CAAP;AACX,eAAO,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBN,IAAI,CAACK,WAAL,CAAiBE,GAAjB,CAAqB,UAAAC,UAAU;AAAA,iBAAI,oBAAC,UAAD;AAAY,YAAA,UAAU,EAAEA,UAAxB;AAAoC,YAAA,GAAG,EAAEA,UAAU,CAACC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA,SAA/B,CAAlB,CAAP;AAED,OAPH,CAFF,CADF;AAcD;;;;EAhBuBnB,S;;AAmB1B,eAAeS,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Restaurant from './Restaurant';\n\n\nconst ALL_RESTAURANTS_QUERY = gql`\n  query ALL_RESTAURANTS_QUERY {\n    restaurants {\n      id\n      name\n      description\n      image\n      location\n    }\n  }\n`;\n\nconst Center = styled.div`\n  text-align:center;\n  margin:2%;\n`;\n\nconst RestaurantsList = styled.div`\n  margin:2%;\n`\n\nclass Restaurants extends Component {\n  render() {\n    return (\n      <Center>\n        <h1>Restaurants</h1>\n        <Query query={ALL_RESTAURANTS_QUERY}>\n          {({ data, error, loading }) => {\n            console.log(data.restaurants)\n            if (loading) return <p>Loading...</p>\n            if (error) return <p>Error: {error.message}</p>\n            return <RestaurantsList>{data.restaurants.map(restaurant => <Restaurant restaurant={restaurant} key={restaurant.id} />\n            )}</RestaurantsList>\n          }}\n        </Query>\n      </Center>\n    )\n  }\n}\n\nexport default Restaurants;"]},"metadata":{},"sourceType":"module"}