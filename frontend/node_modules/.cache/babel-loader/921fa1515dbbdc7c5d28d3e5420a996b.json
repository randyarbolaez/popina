{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/UpdateRestaurant.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display:flex;\\n  justify-content:center;\\n  fieldset {\\n    border-color:#f4976c;\\n    box-shadow: 10px 10px 5px grey;\\n    border-bottom:none;\\n    display:flex;\\n    padding:5%;\\n    margin:5%;\\n  }\\n  label{\\n    font-size:3.4rem;\\n    color:#537E80;\\n  }\\n  input {\\n      border: none;\\n      border-bottom: 2px dashed #9FCACC;\\n      background: #D2FDFF;\\n  }\\n\\n  textarea{\\n      resize: none;\\n  }\\n\\n  button {\\n    background:#ECFFFF;\\n    border:none;\\n    border-radius:5%;\\n    font-size:3.5rem;\\n    font-family:'Porton';\\n    color:#F4976C;\\n  }\\n\\n  button:hover{\\n    background:#F4976C;\\n    color:#ECFFFF;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_RESTAURANT_MUTATION(\\n    $id:ID!\\n    $name: String\\n    $location: String\\n    $description: String\\n  ) {\\n    updateRestaurant(\\n      id:$id\\n      name:$name\\n      location:$location\\n      description:$description\\n    ) {\\n      id\\n      name\\n      location\\n      description\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_RESTAURANT_QUERY($id:ID!){\\n    restaurant(where:{id:$id}){\\n      id\\n      name\\n      location\\n      description\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nvar SINGLE_RESTAURANT_QUERY = gql(_templateObject());\nvar UPDATE_RESTAURANT_MUTATION = gql(_templateObject2());\nvar Form = styled.form(_templateObject3());\n\nvar UpdateRestaurant =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateRestaurant, _Component);\n\n  function UpdateRestaurant() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateRestaurant);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateRestaurant)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          type = _e$target.type,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateRestaurant\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, updateRestaurantMutation) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                console.log('Updating restaurant');\n                console.log(_this.props);\n                _context.next = 5;\n                return updateRestaurantMutation({\n                  variables: _objectSpread({\n                    id: _this.props.id\n                  }, _this.state)\n                });\n\n              case 5:\n                res = _context.sent;\n                console.log('updated');\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(UpdateRestaurant, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Query, {\n        query: SINGLE_RESTAURANT_QUERY,\n        variables: {\n          id: this.props.id\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, function (_ref2) {\n        var data = _ref2.data,\n            loading = _ref2.loading;\n        if (loading) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Loading...\");\n        if (!data.restaurant) return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Not valid Restaurant\");\n        return React.createElement(Mutation, {\n          mutation: UPDATE_RESTAURANT_MUTATION,\n          variables: _this2.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, function (updateRestaurantMutation, _ref3) {\n          var error = _ref3.error,\n              loading = _ref3.loading;\n          return (// <h2>Update</h2>\n            React.createElement(Form, {\n              onSubmit: function onSubmit(e) {\n                return _this2.updateRestaurant(e, updateRestaurantMutation);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, error && React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }, error.message), React.createElement(\"fieldset\", {\n              disabled: loading,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              htmlFor: \"name\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }, \"Restaurant Name\", React.createElement(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              placeholder: \"name\",\n              required: true,\n              defaultValue: data.restaurant.name,\n              onChange: _this2.handleChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117\n              },\n              __self: this\n            })), React.createElement(\"label\", {\n              htmlFor: \"location\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, \"Restaurant Location\", React.createElement(\"input\", {\n              type: \"text\",\n              id: \"location\",\n              name: \"location\",\n              placeholder: \"address | city,state\",\n              required: true,\n              defaultValue: data.restaurant.location,\n              onChange: _this2.handleChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130\n              },\n              __self: this\n            })), React.createElement(\"label\", {\n              htmlFor: \"description\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141\n              },\n              __self: this\n            }, \"Restaurant Description\", React.createElement(\"textarea\", {\n              type: \"text\",\n              id: \"description\",\n              name: \"description\",\n              placeholder: \"describe your restaurant in 50ish words or less\",\n              maxLength: \"360\",\n              required: true,\n              rows: \"5\",\n              cols: \"50\",\n              defaultValue: data.restaurant.description,\n              onChange: _this2.handleChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143\n              },\n              __self: this\n            })), React.createElement(\"button\", {\n              type: \"submit\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 155\n              },\n              __self: this\n            }, \"Sav\", loading ? 'ing' : 'e', \" Changes\")))\n          );\n        });\n      });\n    }\n  }]);\n\n  return UpdateRestaurant;\n}(Component);\n\nexport default UpdateRestaurant;\nexport { UPDATE_RESTAURANT_MUTATION };","map":{"version":3,"sources":["/Users/randyarbolaez/code/job-application-projects/popina/frontend/components/UpdateRestaurant.js"],"names":["React","Component","Query","Mutation","gql","Router","styled","SINGLE_RESTAURANT_QUERY","UPDATE_RESTAURANT_MUTATION","Form","form","UpdateRestaurant","e","target","name","type","value","setState","updateRestaurantMutation","preventDefault","console","log","props","variables","id","state","res","data","loading","restaurant","error","updateRestaurant","message","handleChange","location","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport styled from 'styled-components';\n\nconst SINGLE_RESTAURANT_QUERY = gql`\n  query SINGLE_RESTAURANT_QUERY($id:ID!){\n    restaurant(where:{id:$id}){\n      id\n      name\n      location\n      description\n    }\n  }\n`;\n\nconst UPDATE_RESTAURANT_MUTATION = gql`\n  mutation UPDATE_RESTAURANT_MUTATION(\n    $id:ID!\n    $name: String\n    $location: String\n    $description: String\n  ) {\n    updateRestaurant(\n      id:$id\n      name:$name\n      location:$location\n      description:$description\n    ) {\n      id\n      name\n      location\n      description\n    }\n  }\n`;\n\nconst Form = styled.form`\n  display:flex;\n  justify-content:center;\n  fieldset {\n    border-color:#f4976c;\n    box-shadow: 10px 10px 5px grey;\n    border-bottom:none;\n    display:flex;\n    padding:5%;\n    margin:5%;\n  }\n  label{\n    font-size:3.4rem;\n    color:#537E80;\n  }\n  input {\n      border: none;\n      border-bottom: 2px dashed #9FCACC;\n      background: #D2FDFF;\n  }\n\n  textarea{\n      resize: none;\n  }\n\n  button {\n    background:#ECFFFF;\n    border:none;\n    border-radius:5%;\n    font-size:3.5rem;\n    font-family:'Porton';\n    color:#F4976C;\n  }\n\n  button:hover{\n    background:#F4976C;\n    color:#ECFFFF;\n  }\n`;\n\nclass UpdateRestaurant extends Component {\n  state = {};\n\n  handleChange = (e) => {\n    const { name, type, value } = e.target;\n    this.setState({ [name]: value })\n  }\n\n  updateRestaurant = async (e, updateRestaurantMutation) => {\n    e.preventDefault()\n    console.log('Updating restaurant')\n    console.log(this.props)\n    const res = await updateRestaurantMutation({\n      variables: {\n        id: this.props.id,\n        ...this.state,\n      }\n    });\n    console.log('updated')\n  }\n\n  render() {\n    return (\n      <Query query={SINGLE_RESTAURANT_QUERY} variables={{ id: this.props.id }}>\n        {({ data, loading }) => {\n          if (loading) return <p>Loading...</p>\n          if (!data.restaurant) return <p>Not valid Restaurant</p>\n          return (\n            <Mutation mutation={UPDATE_RESTAURANT_MUTATION} variables={this.state}>\n              {(updateRestaurantMutation, { error, loading }) => (\n                // <h2>Update</h2>\n                <Form onSubmit={e => this.updateRestaurant(e, updateRestaurantMutation)}\n                >\n                  {error && <p>{error.message}</p>}\n                  <fieldset disabled={loading}>\n\n                    <label htmlFor=\"name\">\n                      Restaurant Name\n              <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        placeholder=\"name\"\n                        required\n                        defaultValue={data.restaurant.name}\n                        onChange={this.handleChange}\n                      />\n                    </label>\n\n                    <label htmlFor=\"location\">\n                      Restaurant Location\n              <input\n                        type=\"text\"\n                        id=\"location\"\n                        name=\"location\"\n                        placeholder=\"address | city,state\"\n                        required\n                        defaultValue={data.restaurant.location}\n                        onChange={this.handleChange}\n                      />\n                    </label>\n\n                    <label htmlFor=\"description\">\n                      Restaurant Description\n              <textarea\n                        type=\"text\"\n                        id=\"description\"\n                        name=\"description\"\n                        placeholder=\"describe your restaurant in 50ish words or less\"\n                        maxLength=\"360\"\n                        required\n                        rows=\"5\" cols=\"50\"\n                        defaultValue={data.restaurant.description}\n                        onChange={this.handleChange}\n                      />\n                    </label>\n                    <button type=\"submit\">Sav{loading ? 'ing' : 'e'} Changes</button>\n                  </fieldset>\n                </Form>\n              )}\n            </Mutation>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default UpdateRestaurant;\nexport { UPDATE_RESTAURANT_MUTATION }"]},"metadata":{},"sourceType":"module"}